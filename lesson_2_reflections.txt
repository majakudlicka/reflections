How did viewing a diff between two versions of a file help you see the bug that was introduced?

I was able to see how both files differed and able to spot a spelling mistake. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It would make is easier to spot mistakes when bugs are discovered and restore the previous versions to see which change has caused the bug.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: You are able to make a commit after a logical change rather than in the awkward place in the code. When saving automatically, it's possible to save version in a place when code wouldn't even compile.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

It depends whether or not content is interrelated. If it isn't, it doesn't make sense to save multiple files in one Commit (Google Docs) and if it is, it makes sense to do so. 

How can you use the commands git log and git diff to view the history of files?

I can use git log to see the entire history of commits and git diff to see the changes between two particular commits.

How might using version control make you more confident to make changes that could break something?

I would be more confident because I'd know that the changes can easily be reversed.